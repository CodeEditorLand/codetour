{
	"activationEvents": [
		"onStartupFinished",
		"onNotebookEditor:codetour"
	],
	"browser": "./dist/extension-web.js",
	"contributes": {
		"commands": [
			{
				"category": "CodeTour",
				"command": "codetour.addContentStep",
				"title": "Add Tour Step"
			},
			{
				"command": "codetour.addDirectoryStep",
				"title": "Add CodeTour Step"
			},
			{
				"command": "codetour.addSelectionStep",
				"title": "Add CodeTour Step"
			},
			{
				"command": "codetour.addTourStep",
				"title": "Add Step to Tour"
			},
			{
				"command": "codetour.changeTourDescription",
				"title": "Change Description"
			},
			{
				"command": "codetour.changeTourRef",
				"title": "Change Git Ref"
			},
			{
				"command": "codetour.changeTourStepLine",
				"title": "Change Line"
			},
			{
				"command": "codetour.changeTourStepTitle",
				"title": "Change Title"
			},
			{
				"command": "codetour.changeTourStepIcon",
				"title": "Change Icon"
			},
			{
				"command": "codetour.changeTourTitle",
				"title": "Change Title"
			},
			{
				"category": "CodeTour",
				"command": "codetour.resetProgress",
				"title": "Reset Progress"
			},
			{
				"command": "codetour.resetTourProgress",
				"title": "Reset Progress"
			},
			{
				"command": "codetour.deleteTourStep",
				"title": "Delete Step"
			},
			{
				"command": "codetour.deleteTour",
				"title": "Delete Tour"
			},
			{
				"command": "codetour.editTourAtStep",
				"title": "Edit Step"
			},
			{
				"category": "CodeTour",
				"command": "codetour.editTour",
				"icon": "$(edit)",
				"title": "Edit Tour"
			},
			{
				"category": "CodeTour",
				"command": "codetour.endTour",
				"icon": "$(primitive-square)",
				"title": "End Tour"
			},
			{
				"command": "codetour.exportTour",
				"title": "Export Tour..."
			},
			{
				"category": "CodeTour",
				"command": "codetour.hideMarkers",
				"icon": "$(eye-closed)",
				"title": "Hide Tour Markers"
			},
			{
				"command": "codetour.makeTourPrimary",
				"title": "Make Primary"
			},
			{
				"command": "codetour.moveTourStepForward",
				"icon": "$(arrow-down)",
				"title": "Move Down"
			},
			{
				"command": "codetour.moveTourStepBack",
				"icon": "$(arrow-up)",
				"title": "Move Up"
			},
			{
				"command": "codetour.nextTourStep",
				"icon": "$(arrow-right)",
				"title": "Next"
			},
			{
				"category": "CodeTour",
				"command": "codetour.openTourFile",
				"icon": "$(folder-opened)",
				"title": "Open Tour File..."
			},
			{
				"category": "CodeTour",
				"command": "codetour.openTourUrl",
				"title": "Open Tour URL..."
			},
			{
				"command": "codetour.previewTour",
				"icon": "$(preview)",
				"title": "Preview Tour"
			},
			{
				"command": "codetour.previousTourStep",
				"icon": "$(arrow-left)",
				"title": "Previous"
			},
			{
				"category": "CodeTour",
				"command": "codetour.recordTour",
				"icon": "$(add)",
				"title": "Record Tour"
			},
			{
				"category": "CodeTour",
				"command": "codetour.resumeTour",
				"title": "Resume Tour"
			},
			{
				"command": "codetour.saveTourStep",
				"enablement": "!commentIsEmpty",
				"title": "Save Step"
			},
			{
				"category": "CodeTour",
				"command": "codetour.showMarkers",
				"icon": "$(eye)",
				"title": "Show Tour Markers"
			},
			{
				"category": "CodeTour",
				"command": "codetour.startTour",
				"icon": "$(play)",
				"title": "Start Tour"
			},
			{
				"command": "codetour.unmakeTourPrimary",
				"title": "Unmake Primary"
			},
			{
				"category": "CodeTour",
				"command": "codetour.viewNotebook",
				"title": "View Notebook"
			}
		],
		"configuration": {
			"properties": {
				"codetour.customTourDirectory": {
					"default": null,
					"description": "Specifies a custom location to use when discovering tours.",
					"type": "string"
				},
				"codetour.promptForWorkspaceTours": {
					"default": true,
					"description": "Specifies whether or not to display a notification when opening a workspace with tours for the first time.",
					"type": "boolean"
				},
				"codetour.recordMode": {
					"default": "lineNumber",
					"description": "Specifies how the tour recorder will behave when capturing a new step.",
					"enum": [
						"lineNumber",
						"pattern"
					],
					"type": "string"
				},
				"codetour.showMarkers": {
					"default": true,
					"description": "Specifies whether or not to show tour markers in the editor gutter.",
					"type": "boolean"
				}
			},
			"title": "CodeTour",
			"type": "object"
		},
		"jsonValidation": [
			{
				"fileMatch": "*.tour",
				"url": "./schema.json"
			}
		],
		"keybindings": [
			{
				"command": "codetour.previousTourStep",
				"key": "ctrl+left",
				"mac": "cmd+left",
				"when": "codetour:inTour && !textInputFocus && !terminalFocus"
			},
			{
				"command": "codetour.nextTourStep",
				"key": "ctrl+right",
				"mac": "cmd+right",
				"when": "codetour:inTour && !textInputFocus && !terminalFocus"
			},
			{
				"command": "codetour.endTour",
				"key": "ctrl+down ctrl+down",
				"mac": "cmd+down cmd+down",
				"when": "codetour:inTour && !textInputFocus && !terminalFocus"
			},
			{
				"command": "codetour.startTour",
				"key": "ctrl+up ctrl+up",
				"mac": "cmd+up cmd+up",
				"when": "!textInputFocus && !terminalFocus"
			}
		],
		"languages": [
			{
				"extensions": [
					".tour"
				],
				"id": "json"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "codetour.addContentStep",
					"when": "codetour:inTour && codetour:recording && codetour:canEditTour"
				},
				{
					"command": "codetour.endTour",
					"when": "codetour:inTour"
				},
				{
					"command": "codetour.recordTour",
					"when": "workspaceFolderCount != 0"
				},
				{
					"command": "codetour.resetProgress",
					"when": "codetour:hasProgress"
				},
				{
					"command": "codetour.resumeTour",
					"when": "codetour:inTour"
				},
				{
					"command": "codetour.startTour",
					"when": "codetour:hasTours"
				},
				{
					"command": "codetour.addDirectoryStep",
					"when": "false"
				},
				{
					"command": "codetour.addSelectionStep",
					"when": "false"
				},
				{
					"command": "codetour.addTourStep",
					"when": "false"
				},
				{
					"command": "codetour.changeTourRef",
					"when": "false"
				},
				{
					"command": "codetour.changeTourStepLine",
					"when": "false"
				},
				{
					"command": "codetour.changeTourStepTitle",
					"when": "false"
				},
				{
					"command": "codetour.changeTourStepIcon",
					"when": "false"
				},
				{
					"command": "codetour.changeTourTitle",
					"when": "false"
				},
				{
					"command": "codetour.changeTourDescription",
					"when": "false"
				},
				{
					"command": "codetour.deleteTour",
					"when": "false"
				},
				{
					"command": "codetour.deleteTourStep",
					"when": "false"
				},
				{
					"command": "codetour.editTour",
					"when": "false"
				},
				{
					"command": "codetour.editTourAtStep",
					"when": "false"
				},
				{
					"command": "codetour.exportTour",
					"when": "false"
				},
				{
					"command": "codetour.hideMarkers",
					"when": "false"
				},
				{
					"command": "codetour.makeTourPrimary",
					"when": "false"
				},
				{
					"command": "codetour.nextTourStep",
					"when": "false"
				},
				{
					"command": "codetour.previewTour",
					"when": "false"
				},
				{
					"command": "codetour.previousTourStep",
					"when": "false"
				},
				{
					"command": "codetour.resetTourProgress",
					"when": "false"
				},
				{
					"command": "codetour.saveTourStep",
					"when": "false"
				},
				{
					"command": "codetour.showMarkers",
					"when": "false"
				},
				{
					"command": "codetour.unmakeTourPrimary",
					"when": "false"
				},
				{
					"command": "codetour.viewNotebook",
					"when": "false"
				}
			],
			"comments/comment/context": [
				{
					"command": "codetour.saveTourStep",
					"group": "inline@2",
					"when": "commentController == codetour && codetour:recording"
				}
			],
			"comments/comment/title": [
				{
					"command": "codetour.moveTourStepBack",
					"group": "move@1",
					"when": "commentController == codetour && codetour:canEditTour && commentThread =~ /hasPrevious/"
				},
				{
					"command": "codetour.moveTourStepForward",
					"group": "move@2",
					"when": "commentController == codetour && codetour:canEditTour && commentThread =~ /hasNext/"
				},
				{
					"command": "codetour.changeTourStepLine",
					"group": "mutate@1",
					"when": "commentController == codetour && codetour:canEditTour"
				},
				{
					"command": "codetour.deleteTourStep",
					"group": "mutate@2",
					"when": "commentController == codetour && codetour:canEditTour"
				}
			],
			"comments/commentThread/context": [
				{
					"command": "codetour.addTourStep",
					"group": "inline",
					"when": "commentController == codetour && commentThreadIsEmpty"
				}
			],
			"comments/commentThread/title": [
				{
					"command": "codetour.previousTourStep",
					"group": "inline@1",
					"when": "commentController == codetour && commentThread =~ /hasPrevious/"
				},
				{
					"command": "codetour.nextTourStep",
					"group": "inline@2",
					"when": "commentController == codetour && commentThread =~ /hasNext/"
				},
				{
					"command": "codetour.endTour",
					"group": "inline@3",
					"when": "commentController == codetour"
				},
				{
					"command": "codetour.editTour",
					"group": "inline@4",
					"when": "commentController == codetour && !codetour:isEditing && codetour:canEditTour"
				},
				{
					"command": "codetour.previewTour",
					"group": "inline@4",
					"when": "commentController == codetour && codetour:isEditing && !commentThreadIsEmpty"
				}
			],
			"editor/context": [
				{
					"command": "codetour.addSelectionStep",
					"group": "codetour@1",
					"when": "codetour:recording && editorHasSelection"
				}
			],
			"explorer/context": [
				{
					"command": "codetour.addDirectoryStep",
					"when": "codetour:recording && explorerResourceIsFolder"
				}
			],
			"view/item/context": [
				{
					"command": "codetour.endTour",
					"group": "inline@1",
					"when": "viewItem =~ /^codetour.tour(.recording)?.active/"
				},
				{
					"command": "codetour.startTour",
					"group": "inline@1",
					"when": "viewItem =~ /^codetour.tour(.primary)?$/"
				},
				{
					"command": "codetour.resumeTour",
					"group": "active@1",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.recording)?.active$/"
				},
				{
					"command": "codetour.endTour",
					"group": "active@2",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.recording)?.active$/"
				},
				{
					"command": "codetour.startTour",
					"group": "basic@1",
					"when": "viewItem =~ /^codetour.tour(.primary)?$/"
				},
				{
					"command": "codetour.viewNotebook",
					"group": "basic@2",
					"when": "false"
				},
				{
					"command": "codetour.addContentStep",
					"group": "basic@1",
					"when": "viewItem =~ /^codetour.tour(.primary)?.recording/"
				},
				{
					"command": "codetour.resetTourProgress",
					"group": "basic@2",
					"when": "false"
				},
				{
					"command": "codetour.changeTourTitle",
					"group": "change@1",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/"
				},
				{
					"command": "codetour.changeTourDescription",
					"group": "change@2",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/"
				},
				{
					"command": "codetour.changeTourRef",
					"group": "change@3",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/ && gitOpenRepositoryCount != 0"
				},
				{
					"command": "codetour.makeTourPrimary",
					"group": "edit@1",
					"when": "viewItem =~ /^codetour.tour(.recording)?(.active)?$/"
				},
				{
					"command": "codetour.unmakeTourPrimary",
					"group": "edit@2",
					"when": "viewItem =~ /^codetour.tour.primary(.recording)?(.active)?$/"
				},
				{
					"command": "codetour.editTour",
					"group": "edit@2",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.active)?$/"
				},
				{
					"command": "codetour.previewTour",
					"group": "edit@2",
					"when": "viewItem =~ /^codetour.tour(.primary)?.recording/"
				},
				{
					"command": "codetour.deleteTour",
					"group": "edit@3",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.recording)?(.active)?$/"
				},
				{
					"command": "codetour.exportTour",
					"group": "export@1",
					"when": "viewItem =~ /^codetour.tour(.primary)?(.active)?$/"
				},
				{
					"command": "codetour.moveTourStepBack",
					"group": "inline@1",
					"when": "viewItem =~ /^codetour.tourStep.hasPrevious/"
				},
				{
					"command": "codetour.moveTourStepForward",
					"group": "inline@2",
					"when": "viewItem =~ /codetour.tourStep.*(.hasNext)/"
				},
				{
					"command": "codetour.moveTourStepBack",
					"group": "basic@1",
					"when": "viewItem =~ /^codetour.tourStep.hasPrevious/"
				},
				{
					"command": "codetour.moveTourStepForward",
					"group": "basic@2",
					"when": "viewItem =~ /codetour.tourStep.*(.hasNext)/"
				},
				{
					"command": "codetour.changeTourStepTitle",
					"group": "change@1",
					"when": "viewItem =~ /^codetour.tourStep/"
				},
				{
					"command": "codetour.changeTourStepIcon",
					"group": "change@2",
					"when": "viewItem =~ /^codetour.tourStep/"
				},
				{
					"command": "codetour.addContentStep",
					"group": "change@2",
					"when": "viewItem =~ /^codetour.tourStep/ && codetour:recording"
				},
				{
					"command": "codetour.editTourAtStep",
					"group": "manage@1",
					"when": "viewItem =~ /^codetour.tourStep/ && !codetour:recording"
				},
				{
					"command": "codetour.deleteTourStep",
					"group": "manage@2",
					"when": "viewItem =~ /^codetour.tourStep/"
				}
			],
			"view/title": [
				{
					"command": "codetour.hideMarkers",
					"group": "navigation@1",
					"when": "view == codetour.tours && codetour:showingMarkers"
				},
				{
					"command": "codetour.showMarkers",
					"group": "navigation@1",
					"when": "view == codetour.tours && !codetour:showingMarkers"
				},
				{
					"command": "codetour.openTourFile",
					"group": "navigation@2",
					"when": "view == codetour.tours"
				},
				{
					"command": "codetour.recordTour",
					"group": "navigation@3",
					"when": "view == codetour.tours"
				}
			]
		},
		"notebookProvider": [
			{
				"displayName": "CodeTour",
				"selector": [
					{
						"filenamePattern": "*.tour-notebook"
					}
				],
				"viewType": "codetour"
			}
		],
		"views": {
			"explorer": [
				{
					"id": "codetour.tours",
					"name": "CodeTour",
					"when": "workspaceFolderCount != 0 || codetour:inTour"
				}
			]
		},
		"viewsWelcome": [
			{
				"contents": "In order to create a guided walkthrough, you can begin recording a tour for the currently opened workspace ([Learn More](https://github.com/vsls-contrib/codetour#recording-tours)).\n\n[Record Tour](command:codetour.recordTour)\n\nYou can also open tours that were shared with you by others ([Learn More](https://github.com/vsls-contrib/codetour#opening-tours)).\n\n[Open Tour File](command:codetour.openTourFile)\n\n[Open Tour URL](command:codetour.openTourUrl)",
				"view": "codetour.tours"
			}
		]
	},
	"dependencies": {
		"@types/jexl": "2.3.4",
		"axios": "1.7.7",
		"jexl": "2.3.0",
		"mobx": "6.13.5",
		"os-browserify": "0.3.0",
		"path-browserify": "1.0.1",
		"throttle-debounce": "5.0.2",
		"vsls": "1.0.4753"
	},
	"description": "VS Code extension that allows you to record and playback guided tours of codebases, directly within the editor",
	"devDependencies": {
		"@types/node": "22.8.1",
		"@types/throttle-debounce": "5.0.2",
		"debug": "4.3.7",
		"ts-loader": "9.5.1"
	},
	"displayName": "CodeTour",
	"extensionKind": [
		"workspace"
	],
	"icon": "images/icon.png",
	"main": "./dist/extension-node.js",
	"name": "codetour",
	"scripts": {
		"build": "webpack --mode production"
	}
}
